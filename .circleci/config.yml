version: 2.1

defaults: &defaults
  docker:
    - image: circleci/python:3.9.7
  working_directory: ~/project

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      sudo pip install --upgrade pip
      pip install --user tox

jobs:
  test_app:
    <<: *defaults
    working_directory: ~/project/song-popularity-api
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox  
      - run:
          name: Running app tests
          command: |
            tox

  deploy_app:
    <<: *defaults
    steps:
      - checkout:
          path: ~/project
      - run:
          name: deploy to heroku
          command: |
            git subtree push --prefix song-popularity-api https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

  deploy_app_container:
    <<: *defaults
    steps:
      - setup_remote_docker:
          version: 20.10.6
      - checkout:
          path: ~/project
      - run:
          name: build image
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            make build-ml-api-heroku
      - run:
          name: push image to heroku
          command: |
            make push-ml-api-heroku
      - run:
          name: release to heroku
          command: |
            make release-heroku

  publish_model:
    <<: *defaults
    working_directory: ~/project/classification_model
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Fetch the data
          command: |
            tox -e fetch_data
      - run:
          name: Test the model
          command: |
            tox
      - run:
          name: publish model to testpypi
          command: |
            tox -e publish_model

tags_only: &tags_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^.*/

workflows:
  app:
    jobs:
      - test_app
      - deploy_app:
          requires:
            - test_app
          filters:
            branches:
              only:
                - master
      - publish_model:
          <<: *tags_only
      - deploy_app_container:
          requires:
            - deploy_app
          filters:
            branches:
              only:
                - master

